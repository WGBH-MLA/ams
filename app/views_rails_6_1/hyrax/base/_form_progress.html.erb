<%
# Overwites Hyrax 4.0 gem's version of _form_progress.html.erb to add child create button on forms.
# NOTE: if Hyrax's version of _form_progress.html.erb changes, this will need to be updated
%>

<aside id="form-progress" class="form-progress card">
  <div class="card-header">
    <h3 class="card-title"><%= t("hyrax.works.progress.header") %></h3>
  </div>
  <div class="list-group">
    <div class="list-group-item">
      <fieldset>
        <legend class="legend-save-work"><%= t('.requirements') %></legend>
        <ul class="requirements">
          <li class="incomplete" id="required-metadata"><%= t('.required_descriptions') %></li>
          <% if Hyrax.config.work_requires_files? %>
            <li class="incomplete" id="required-files"><%= t('.required_files') %></li>
          <% end %>
          <% if Flipflop.active_deposit_agreement_acceptance? %>
            <li class="incomplete" id="required-agreement"><%= t('.required_agreement') %></li>
          <% end %>
        </ul>
      </fieldset>
    </div>
    <div class="set-access-controls list-group-item">
      <%= render 'form_visibility_component', f: f, save_work: true %>
    </div>
    <% if Flipflop.proxy_deposit? && current_user.can_make_deposits_for.any? %>
        <div class="list-group-item">
          <%= f.input :on_behalf_of, label: t(".proxy_depositors"), collection: current_user.can_make_deposits_for, prompt: t(".yourself"), value_method: :user_key %>
        </div>
    <% end %>
  </div>
  <% if @form.model.valid_child_concerns.any? && @form.respond_to?(:child_create_button) && @form.child_create_button %>
    <%= javascript_include_tag "work_actions" %>
    <div class="list-group">
      <div class="list-group-item">
        <%= f.input :child_work_create , :as => :hidden, :input_html => { :value => "", name:"child_work_create", id: "child_work_create" } %>
        <% @form.model.valid_child_concerns.each do |child| %>
          <%= f.button :button,"Save & Create "+child.model_name.human.titleize,
                       onclick:"ChildWorkActions.saveActon(this);",
                       class: 'btn btn-primary associated_work_actions',
                       value:child.model_name,
                       style: "color: white;" %>
          <br />
          <br />
        <% end %>
      </div>
    </div>
  <% end %>
  <div class="card-footer text-center">
    <% if ::Flipflop.show_deposit_agreement? %>
      <% if ::Flipflop.active_deposit_agreement_acceptance? %>
        <label>
          <%= check_box_tag 'agreement', 1, f.object.agreement_accepted, required: true %>
          <%= t('hyrax.active_consent_to_agreement') %><br />
          <%= link_to t('hyrax.pages.tabs.agreement_page'),
                      hyrax.agreement_path,
                      target: '_blank' %>
        </label>
      <% else %>
        <%= t('hyrax.passive_consent_to_agreement') %><br />
        <%= link_to t('hyrax.pages.tabs.agreement_page'),
                    hyrax.agreement_path,
                    target: '_blank' %>
      <% end %>
    <% end %>
    <br />
    <% cancel_path = f.object.persisted? ? polymorphic_path([main_app, f.object]) : hyrax.my_works_path %>
    <%= link_to t(:'helpers.action.cancel'),
                cancel_path,
                class: 'btn btn-default' %>
    <%# TODO: If we start using ActionCable, we could listen for object updates and
              alert the user that the object has changed by someone else %>
    <%= f.input Hyrax::Actors::OptimisticLockValidator.version_field, as: :hidden if f.object.persisted? %>
    <%= f.submit class: 'btn btn-primary', onclick: "confirmation_needed = false;", id: "with_files_submit", name: "save_with_files" %>
  </div>
</aside>
