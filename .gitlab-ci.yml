stages:
  - build
  - lint
  - test
  - staging

variables:
  REGISTRY_HOST: registry.gitlab.com
  REGISTRY_URI: /notch8/gbh

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - sc build
    - sc push
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - local

# lint:
#   stage: lint
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   variables:
#     PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.com/api/v4"
#   before_script:
#     - export PRONTO_GITLAB_API_PRIVATE_TOKEN=$GITLAB_API_TOKEN
#   script:
#     - cd /app/samvera/hyrax-webapp && bundle exec pronto run -f gitlab
#   tags:
#     - docker

# test:
#   stage: test
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   services:
#     - name: mysql:5.7
#       alias: db
#     - name: bitnami/solr:8
#       alias: solr
#       entrypoint: ["docker-entrypoint.sh", "solr-precreate", "test"]
#     - name: redis:5-alpine
#       alias: redis
#     - name: samvera/fcrepo4:4.7.5
#       alias: fcrepo
#     - name: bitnami/zookeeper:3
#       alias: zk

    
#   variables:
#     MYSQL_DATABASE: GBH
#     MYSQL_ROOT_PASSWORD: password
#     MYSQL_USER: GBH_test
#     MYSQL_PASSWORD: password
#     MYSQL_HOST: mysql
#     DATABASE_ADAPTER: mysql2
#     DATABASE_HOST: mysql
#     DATABASE_NAME: GBH
#     DATABASE_PASSWORD: password
#     DATABASE_USER: GBH_test
#     TEST_DB: GBH
#   script:
#     - cd /app/samvera/hyrax-webapp && bundle exec rake db:create db:schema:load spec
#   tags:
#     - docker
#   variables:
#     GIT_STRATEGY: none

gbh.staging:
  stage: staging
  extends:
    - .deploy
  environment:
    name: gbh.staging
    url: http://gbh-staging.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: gbh.staging.stop
  only:
    refs:
      - n8-staging
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    WORKER_IMAGE: $CI_REGISTRY_IMAGE
    HELM_EXPERIMENTAL_OCI: 1
    HELM_RELEASE_NAME: gbh-staging
    KUBE_NAMESPACE: gbh-staging
    HELM_EXTRA_ARGS: >
      --values ops/staging-deploy.yaml
  script:
    - export KUBECONFIG=$KUBECONFIG_R2
    - envsubst < ops/staging-deploy.tmpl.yaml > ops/staging-deploy.yaml
    - ./bin/helm_deploy gbh-staging gbh-staging
  tags:
    - local

gbh.staging.stop:
  stage: staging
  extends:
    - .deploy
  environment:
    name: gbh.staging
    url: http://gbh-staging.$KUBE_INGRESS_BASE_DOMAIN
    action: stop
  when: manual
  allow_failure: true
  script:
    - export KUBECONFIG=$KUBECONFIG_GBH
    - ./bin/helm_delete gbh-staging gbh-staging
  tags:
    - local

.deploy:
  image: dtzar/helm-kubectl:3.5.3