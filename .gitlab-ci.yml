stages:
  - build
  - lint
  - test
  - deploy

variables:
  REGISTRY_HOST: registry.gitlab.com
  REGISTRY_URI: /notch8/ngao

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - sc build
    - sc push
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - local

lint:
  stage: lint
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  variables:
    PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.com/api/v4"
  before_script:
    - export PRONTO_GITLAB_API_PRIVATE_TOKEN=$GITLAB_API_TOKEN
  script:
    - cd /app/samvera/hyrax-webapp && bundle exec pronto run -f gitlab
  tags:
    - docker

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  services:
    - name: mysql:5.7
      alias: db
    - name: bitnami/solr:8
      alias: solr
      entrypoint: ["docker-entrypoint.sh", "solr-precreate", "test"]
    - name: redis:5-alpine
      alias: redis
    - name: samvera/fcrepo4:4.7.5
      alias: fcrepo
    - name: bitnami/zookeeper:3
      alias: zk

    
  variables:
    MYSQL_DATABASE: GBH
    MYSQL_ROOT_PASSWORD: password
    MYSQL_USER: GBH_test
    MYSQL_PASSWORD: password
    MYSQL_HOST: mysql
    DATABASE_ADAPTER: mysql2
    DATABASE_HOST: mysql
    DATABASE_NAME: GBH
    DATABASE_PASSWORD: password
    DATABASE_USER: GBH_test
    TEST_DB: GBH
  script:
    - cd /app/samvera/hyrax-webapp && bundle exec rake db:create db:schema:load spec
  tags:
    - docker
  variables:
    GIT_STRATEGY: none

# review:
#   stage: review
#   type: deploy
#   environment:
#     name: $CI_COMMIT_REF_SLUG
#     url: http://web.$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.staging.$SITE_URI_BASE
#     on_stop: stop_review
#   only:
#     - branches
#   except:
#     - main
#   script:
#     - ./chart/bin/deploy review $CI_COMMIT_REF_SLUG
#  tags:
#     - local

# stop_review:
#   stage: review
#   script:
#     - ./chart/bin/remove review $CI_COMMIT_REF_SLUG

#   when: manual
#   environment:
#     name: $CI_PROJECT_NAME-$CI_BUILD_REF_SLUG
#     action: stop

# staging:
#   stage: deploy
#   type: deploy
#   script:
#   - ./chart/bin/deploy staging $CI_COMMIT_REF_SLUG
#   only:
#     - main
#   tags:
#     - local

# production:
#   stage: deploy
#   type: deploy
#   script:
#   - ./chart/bin/deploy production $CI_COMMIT_REF_SLUG
#   when: manual
#   only:
#     - main
#   tags:
#     - local
